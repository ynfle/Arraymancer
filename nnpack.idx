nnp_status	nnpack.html#nnp_status	nnpack: nnp_status	
pthreadpool_t	nnpack.html#pthreadpool_t	nnpack: pthreadpool_t	
nnp_status_invalid_output_subsampling	nnpack.html#nnp_status_invalid_output_subsampling	nnpack: nnp_status_invalid_output_subsampling	
nnp_status_invalid_activation	nnpack.html#nnp_status_invalid_activation	nnpack: nnp_status_invalid_activation	
nnp_status_invalid_activation_parameters	nnpack.html#nnp_status_invalid_activation_parameters	nnpack: nnp_status_invalid_activation_parameters	
nnp_activation	nnpack.html#nnp_activation	nnpack: nnp_activation	
nnp_convolution_algorithm	nnpack.html#nnp_convolution_algorithm	nnpack: nnp_convolution_algorithm	
nnp_convolution_transform_strategy	nnpack.html#nnp_convolution_transform_strategy	nnpack: nnp_convolution_transform_strategy	
nnp_convolution_transform_strategy_block_based	nnpack.html#nnp_convolution_transform_strategy_block_based	nnpack: nnp_convolution_transform_strategy_block_based	
nnp_convolution_transform_strategy_tuple_based	nnpack.html#nnp_convolution_transform_strategy_tuple_based	nnpack: nnp_convolution_transform_strategy_tuple_based	
nnp_size	nnpack.html#nnp_size	nnpack: nnp_size	
nnp_padding	nnpack.html#nnp_padding	nnpack: nnp_padding	
nnp_profile	nnpack.html#nnp_profile	nnpack: nnp_profile	
nnp_initialize	nnpack.html#nnp_initialize	nnpack: nnp_initialize(): nnp_status	
nnp_deinitialize	nnpack.html#nnp_deinitialize	nnpack: nnp_deinitialize(): nnp_status	
nnp_convolution_output	nnpack.html#nnp_convolution_output,nnp_convolution_algorithm,csize_t,csize_t,csize_t,nnp_size,nnp_padding,nnp_size,ptr.cfloat,ptr.cfloat,ptr.cfloat,ptr.cfloat,pointer,ptr.csize_t,nnp_activation,pointer,pthreadpool_t,ptr.nnp_profile	nnpack: nnp_convolution_output(algorithm: nnp_convolution_algorithm;\n                       batch_size: csize_t; input_channels: csize_t;\n                       output_channels: csize_t; input_size: nnp_size;\n                       input_padding: nnp_padding; kernel_size: nnp_size;\n                       input: ptr cfloat; kernel: ptr cfloat; bias: ptr cfloat;\n                       output: ptr cfloat; workspace_buffer: pointer = nil;\n                       workspace_size: ptr csize_t = nil;\n                       activation: nnp_activation = nnp_activation_identity;\n                       activation_parameters: pointer = nil;\n                       threadpool: pthreadpool_t = nil;\n                       profile: ptr nnp_profile = nil): nnp_status	
nnp_convolution_input_gradient	nnpack.html#nnp_convolution_input_gradient,nnp_convolution_algorithm,csize_t,csize_t,csize_t,nnp_size,nnp_padding,nnp_size,ptr.cfloat,ptr.cfloat,ptr.cfloat,pointer,ptr.csize_t,nnp_activation,pointer,pthreadpool_t,ptr.nnp_profile	nnpack: nnp_convolution_input_gradient(algorithm: nnp_convolution_algorithm;\n                               batch_size: csize_t; input_channels: csize_t;\n                               output_channels: csize_t; input_size: nnp_size;\n                               input_padding: nnp_padding;\n                               kernel_size: nnp_size; grad_output: ptr cfloat;\n                               kernel: ptr cfloat; grad_input: ptr cfloat;\n                               workspace_buffer: pointer = nil;\n                               workspace_size: ptr csize_t = nil; activation: nnp_activation = nnp_activation_identity;\n                               activation_parameters: pointer = nil;\n                               threadpool: pthreadpool_t = nil;\n                               profile: ptr nnp_profile = nil): nnp_status	
nnp_convolution_kernel_gradient	nnpack.html#nnp_convolution_kernel_gradient,nnp_convolution_algorithm,csize_t,csize_t,csize_t,nnp_size,nnp_padding,nnp_size,ptr.cfloat,ptr.cfloat,ptr.cfloat,pointer,ptr.csize_t,nnp_activation,pointer,pthreadpool_t,ptr.nnp_profile	nnpack: nnp_convolution_kernel_gradient(algorithm: nnp_convolution_algorithm;\n                                batch_size: csize_t; input_channels: csize_t;\n                                output_channels: csize_t; input_size: nnp_size;\n                                input_padding: nnp_padding;\n                                kernel_size: nnp_size; input: ptr cfloat;\n                                grad_output: ptr cfloat;\n                                grad_kernel: ptr cfloat;\n                                workspace_buffer: pointer = nil;\n                                workspace_size: ptr csize_t = nil; activation: nnp_activation = nnp_activation_identity;\n                                activation_parameters: pointer = nil;\n                                threadpool: pthreadpool_t = nil;\n                                profile: ptr nnp_profile = nil): nnp_status	
nnp_convolution_inference	nnpack.html#nnp_convolution_inference,nnp_convolution_algorithm,nnp_convolution_transform_strategy,csize_t,csize_t,nnp_size,nnp_padding,nnp_size,nnp_size,ptr.cfloat,ptr.cfloat,ptr.cfloat,ptr.cfloat,pointer,ptr.csize_t,nnp_activation,pointer,pthreadpool_t,ptr.nnp_profile	nnpack: nnp_convolution_inference(algorithm: nnp_convolution_algorithm;\n    transform_strategy: nnp_convolution_transform_strategy;\n                          input_channels: csize_t; output_channels: csize_t;\n                          input_size: nnp_size; input_padding: nnp_padding;\n                          kernel_size: nnp_size; output_subsampling: nnp_size;\n                          input: ptr cfloat; kernel: ptr cfloat;\n                          bias: ptr cfloat; output: ptr cfloat;\n                          workspace_buffer: pointer;\n                          workspace_size: ptr csize_t;\n                          activation: nnp_activation;\n                          activation_parameters: pointer;\n                          threadpool: pthreadpool_t; profile: ptr nnp_profile): nnp_status	
nnp_fully_connected_output	nnpack.html#nnp_fully_connected_output,csize_t,csize_t,csize_t,ptr.cfloat,ptr.cfloat,ptr.cfloat,pthreadpool_t,ptr.nnp_profile	nnpack: nnp_fully_connected_output(batch_size: csize_t; input_channels: csize_t;\n                           output_channels: csize_t; input: ptr cfloat;\n                           kernel: ptr cfloat; output: ptr cfloat;\n                           threadpool: pthreadpool_t; profile: ptr nnp_profile): nnp_status	
nnp_fully_connected_inference	nnpack.html#nnp_fully_connected_inference,csize_t,csize_t,ptr.cfloat,ptr.cfloat,ptr.cfloat,pthreadpool_t	nnpack: nnp_fully_connected_inference(input_channels: csize_t; output_channels: csize_t;\n                              input: ptr cfloat; kernel: ptr cfloat;\n                              output: ptr cfloat; threadpool: pthreadpool_t): nnp_status	
nnp_fully_connected_inference_f16f32	nnpack.html#nnp_fully_connected_inference_f16f32,csize_t,csize_t,ptr.cfloat,pointer,ptr.cfloat,pthreadpool_t	nnpack: nnp_fully_connected_inference_f16f32(input_channels: csize_t;\n                                     output_channels: csize_t;\n                                     input: ptr cfloat; kernel: pointer;\n                                     output: ptr cfloat;\n                                     threadpool: pthreadpool_t): nnp_status	
nnp_max_pooling_output	nnpack.html#nnp_max_pooling_output,csize_t,csize_t,nnp_size,nnp_padding,nnp_size,nnp_size,ptr.cfloat,ptr.cfloat,pthreadpool_t	nnpack: nnp_max_pooling_output(batch_size: csize_t; channels: csize_t;\n                       input_size: nnp_size; input_padding: nnp_padding;\n                       pooling_size: nnp_size; pooling_stride: nnp_size;\n                       input: ptr cfloat; output: ptr cfloat;\n                       threadpool: pthreadpool_t): nnp_status	
nnp_softmax_output	nnpack.html#nnp_softmax_output,csize_t,csize_t,ptr.cfloat,ptr.cfloat,pthreadpool_t	nnpack: nnp_softmax_output(batch_size: csize_t; channels: csize_t; input: ptr cfloat;\n                   output: ptr cfloat; threadpool: pthreadpool_t): nnp_status	
nnp_relu_output	nnpack.html#nnp_relu_output,csize_t,csize_t,ptr.cfloat,ptr.cfloat,cfloat,pthreadpool_t	nnpack: nnp_relu_output(batch_size: csize_t; channels: csize_t; input: ptr cfloat;\n                output: ptr cfloat; negative_slope: cfloat;\n                threadpool: pthreadpool_t): nnp_status	
nnp_relu_input_gradient	nnpack.html#nnp_relu_input_gradient,csize_t,csize_t,ptr.cfloat,ptr.cfloat,ptr.cfloat,cfloat,pthreadpool_t	nnpack: nnp_relu_input_gradient(batch_size: csize_t; channels: csize_t;\n                        grad_output: ptr cfloat; input: ptr cfloat;\n                        grad_input: ptr cfloat; negative_slope: cfloat;\n                        threadpool: pthreadpool_t): nnp_status	
