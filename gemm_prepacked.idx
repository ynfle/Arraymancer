gemm_prepackB_mem_required_impl	gemm_prepacked.html#gemm_prepackB_mem_required_impl,staticMicroKernel,typedesc,int,int,int	gemm_prepacked: gemm_prepackB_mem_required_impl(ukernel: static MicroKernel; T: typedesc;\n                                M, N, K: int): int	
gemm_prepackB_mem_required	gemm_prepacked.html#gemm_prepackB_mem_required,type,int,int,int	gemm_prepacked: gemm_prepackB_mem_required(T: type; M, N, K: int): int	
gemm_prepackB	gemm_prepacked.html#gemm_prepackB,ptr.,int,int,int,ptr.T,int,int	gemm_prepacked: gemm_prepackB[T](dst_packedB: ptr (T or UncheckedArray[T]); M, N, K: int;\n                 src_B: ptr T; rowStrideB, colStrideB: int)	
gemm_prepackA_mem_required_impl	gemm_prepacked.html#gemm_prepackA_mem_required_impl,staticMicroKernel,typedesc,int,int,int	gemm_prepacked: gemm_prepackA_mem_required_impl(ukernel: static MicroKernel; T: typedesc;\n                                M, N, K: int): int	
gemm_prepackA_mem_required	gemm_prepacked.html#gemm_prepackA_mem_required,typedesc,int,int,int	gemm_prepacked: gemm_prepackA_mem_required(T: typedesc; M, N, K: int): int	
gemm_prepackA	gemm_prepacked.html#gemm_prepackA,ptr.,int,int,int,ptr.T,int,int	gemm_prepacked: gemm_prepackA[T](dst_packedA: ptr (T or UncheckedArray[T]); M, N, K: int;\n                 src_A: ptr T; rowStrideA, colStrideA: int)	
gemm_packed	gemm_prepacked.html#gemm_packed,int,int,int,T,ptr.,ptr.,T,ptr.,int,int	gemm_prepacked: gemm_packed[T: SomeNumber](M, N, K: int; alpha: T;\n                           packedA: ptr (T or UncheckedArray[T]);\n                           packedB: ptr (T or UncheckedArray[T]); beta: T;\n                           C: ptr (T or UncheckedArray[T]);\n                           rowStrideC, colStrideC: int)	
