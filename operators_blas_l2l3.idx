gemv	operators_blas_l2l3.html#gemv,T,Tensor[T: float or float32 or float64 or Complex],Tensor[T: float or float32 or float64 or Complex],T,Tensor[T: float or float32 or float64 or Complex]	operators_blas_l2l3: gemv[T: SomeFloat | Complex](alpha: T; A: Tensor[T]; x: Tensor[T]; beta: T;\n                             y: var Tensor[T])	
gemv	operators_blas_l2l3.html#gemv,T,Tensor[T: SomeInteger],Tensor[T: SomeInteger],T,Tensor[T: SomeInteger]	operators_blas_l2l3: gemv[T: SomeInteger](alpha: T; A: Tensor[T]; x: Tensor[T]; beta: T;\n                     y: var Tensor[T])	
gemm	operators_blas_l2l3.html#gemm,T,Tensor[T: float or float32 or float64 or Complex],Tensor[T: float or float32 or float64 or Complex],T,Tensor[T: float or float32 or float64 or Complex]	operators_blas_l2l3: gemm[T: SomeFloat | Complex](alpha: T; A, B: Tensor[T]; beta: T;\n                             C: var Tensor[T])	
gemm	operators_blas_l2l3.html#gemm,T,Tensor[T: SomeInteger],Tensor[T: SomeInteger],T,Tensor[T: SomeInteger]	operators_blas_l2l3: gemm[T: SomeInteger](alpha: T; A, B: Tensor[T]; beta: T; C: var Tensor[T])	
gemm	operators_blas_l2l3.html#gemm,Tensor[T: SomeNumber],Tensor[T: SomeNumber],Tensor[T: SomeNumber]	operators_blas_l2l3: gemm[T: SomeNumber](A, B: Tensor[T]; C: var Tensor[T])	
`*`	operators_blas_l2l3.html#*,Tensor[T: SomeNumber],Tensor[T: SomeNumber]	operators_blas_l2l3: `*`[T: SomeNumber](a, b: Tensor[T]): Tensor[T]	
`*`	operators_blas_l2l3.html#*,Tensor[T: Complex[system.float32] or Complex[system.float64]],Tensor[T: Complex[system.float32] or Complex[system.float64]]	operators_blas_l2l3: `*`[T: Complex[float32] or Complex[float64]](a, b: Tensor[T]): Tensor[T]	
